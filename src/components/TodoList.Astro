---

---

<div class="toDoContainer">
  <div class="todoList">
    <h2>TO-DO</h2>

    <div class="activeListContainer">
      <ol class="activeList"></ol>
    </div>
    <input type="text" placeholder="Put task here" />
    <div class="trashTodo" id="div1"></div>
  </div>
  <div class="todoListDone">
    <h2>DONE</h2>
    <div class="doneListContainer">
      <ol class="doneList"></ol>
    </div>
    <div class="buttomContainer">
      <button class="deleteText">Clear all</button>
    </div>
  </div>
</div>
<style>
  .trashTodo {
    width: 2.5rem;
    height: 3rem;

    background-image: url("../src/assets/icons/trash.svg");
  }
  ol {
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    gap: 0.3rem;
  }
  .activeListContainer {
    width: 100%;
    max-height: 24rem;
    overflow-x: hidden;
    overflow-y: auto;
    text-align: justify;
  }
  .doneListContainer {
    width: 100%;
    max-height: 24rem;
    overflow-x: hidden;
    overflow-y: auto;
    text-align: justify;
  }
  h2 {
    margin-bottom: 0.2rem;
  }

  input {
    background-color: var(--dm_notAtive_icon_color);
    border: none;
    border-radius: 8px;
    padding: 1rem 1.5rem;
    width: 100%;
    margin-top: 0.3rem;
  }
  h2,
  button,
  input {
    color: var(--dm_text_color);
  }
  .buttomContainer {
    display: flex;
    justify-content: end;
  }
  button {
    background-color: var(--dm_accent_color);
    border: none;
    padding: 0.2rem 1.2rem;
    border-radius: 8px;
    cursor: pointer;
    margin-top: 1rem;
  }
  button:hover {
    background-color: var(--dm_accent_second_color);
  }
  .toDoContainer {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    background-color: var(--dm_div_color);
    padding: 1.5rem;
    border-radius: 8px;
  }
  .doneListContainer {
    min-height: 30rem;
  }
  .todoList,
  .todoListDone {
    background-color: var(--dm_todo_bg_color);
    padding: 1rem 2rem;
    border-radius: 8px;
    min-height: 30rem;
    min-width: 25rem;
  }

  .todoList {
    li:hover {
      text-decoration: line-through;
    }
  }
  .todoListDone {
    li {
      text-decoration: line-through;
    }
    li:hover {
      text-decoration: none;
    }
  }
</style>
<script>
  window.addEventListener("load", (event) => {
    console.log("page is fully loaded");
    if (todoStorage === null) {
      listValues = [];
    } else {
      listValues = JSON.parse(todoStorage);
      console.log("list", listValues);
    }
    if (assigmentDoneStorage === null) {
      listDone = [];
    } else {
      listDone = JSON.parse(assigmentDoneStorage);
    }
    listGenerator();
    listGeneratorDone();
  });

  let listValues = [];
  let listDone = [];
  const todoStorage = localStorage.getItem("todoStorage");
  const assigmentDoneStorage = localStorage.getItem("assigmentDoneStorage");
  const inputButton = document.querySelector(".addTaskButton");
  const deleteTextButton = document.querySelector(".deleteText");
  const checking = document.querySelector(".checkInput");
  const listDoneContainer = document.querySelector(".doneList");
  const inputOfValues = document.querySelector("input");

  document.getElementById("div1").addEventListener("dragover", allowDrop);

  document.getElementById("div1").addEventListener("drop", drop);

  let checkDone = "";

  inputOfValues.addEventListener("keypress", function (event) {
    if (event.key === "Enter") {
      event.preventDefault();
      inputVal();
    }
  });

  function inputVal() {
    let inputText = inputOfValues.value;
    listValues.push(inputText);
    console.log(listValues);
    updateStrage();
    listGenerator();
  }

  deleteTextButton.addEventListener("click", () => {
    listDone.splice(0);
    updateStrage();
    listGeneratorDone();
  });

  function listGenerator() {
    const listContainer = document.querySelector(".activeList");
    listContainer.innerHTML = ``;
    listValues.forEach((assigment, id) => {
      listContainer.innerHTML += `<li id="item${id}" draggable="true" ondragstart="drag(event)" class="todo_assigment" data-id="${id}">  <label class="checkbox">${assigment} <input data-id="${id}" data-textContent="${assigment}" class="checkInput" type="checkbox" ${checkDone} /> <span class="check"></span> </label> </li>`;
    });

    document.querySelectorAll(".todo_assigment").forEach((each, id) => {
      each.addEventListener("dblclick", removeAssigment);
    });

    document.querySelectorAll(".checkInput").forEach((each, id) => {
      each.addEventListener("click", checkingTrue);
    });
  }
  function checkingTrue(event) {
    console.log("virker det?", event.target.dataset);

    let listItemNumbers = event.target.dataset.id;
    let listItemValue = event.target.dataset.textcontent;

    listDone.push(listItemValue);
    listValues.splice(listItemNumbers, 1);
    console.log("list Done", listDone);
    console.log("list Item Number", listItemNumbers);
    console.log("list item value", listItemValue);
    listGenerator();
    listGeneratorDone();
    updateStrage();
  }

  function listGeneratorDone() {
    listDoneContainer.innerHTML = ``;
    listDone.forEach((assigment, id) => {
      listDoneContainer.innerHTML += `<li class="todo_assigmentDone" data-id="${id}">  <label class="checkbox">${assigment}  <input data-id="${id} data-textContent="${assigment}" class="checkInput" type="checkbox" checked ${checkDone} /> <span class="check"></span> </label> </li>`;
    });

    document.querySelectorAll(".todo_assigmentDone").forEach((each, id) => {
      each.addEventListener("dblclick", addAssigmentDone);
    });

    // const returnButton = document.querySelector(".returnBut");
    // returnButton.addEventListener("click", (event) => {
    //   addAssigmentDone(event);
    //   console.log("return that thing", event);
    // });
  }

  function updateStrage() {
    localStorage.setItem("todoStorage", JSON.stringify(listValues));
    localStorage.setItem("assigmentDoneStorage", JSON.stringify(listDone));
  }

  function removeAssigment(event) {
    console.log("event check", event);
    let listItemNumbers = event.target.dataset.id;
    let listItemValue = event.target.textContent;

    listDone.push(listItemValue);
    listValues.splice(listItemNumbers, 1);
    console.log("list Done", listDone);
    console.log("list Item Number", listItemNumbers);
    console.log("list item value", listItemValue);
    listGenerator();
    listGeneratorDone();
    updateStrage();
  }
  function addAssigmentDone(event) {
    console.log("event check done", event);
    let listItemNumbers = event.target.dataset.id;
    let listItemValue = event.target.textContent;
    listValues.push(listItemValue);
    listDone.splice(listItemNumbers, 1);
    console.log("list Done", listDone);

    listGenerator();
    listGeneratorDone();
    updateStrage();
  }

  // test
  // Drag & Drop Functions
  function allowDrop(event) {
    event.preventDefault(); // Allows dropping
    console.log("allowDrop event:", event);
  }

  function drag(event) {
    event.dataTransfer.setData("text", event.target.id); // Set the id of the element being dragged
    console.log("drag event:", event);
  }

  function drop(event) {
    event.preventDefault();
    let workPls = document.querySelector("li");
    console.log("Its alive", workPls);
    trash(event);

    console.log("virk nu", event);
  }

  function trash(event) {
    console.log("event check", event);
    let listItemNumbers = event.target.dataset.id;
    listValues.splice(listItemNumbers, 1);
    console.log("list Done", listDone);

    listGenerator();
    listGeneratorDone();
    updateStrage();
  }
</script>
